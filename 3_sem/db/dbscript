
--
-- Create model DriverEntry
--
CREATE TABLE "DBLABAPP_DRIVERENTRY" ("ID" NUMBER(11) NOT NULL PRIMARY KEY, "DRIVER_NAME" NVARCHAR2(200) NULL);
--
-- Create model LogEntry
--
CREATE TABLE "DBLABAPP_LOGENTRY" ("ID" NUMBER(11) NOT NULL PRIMARY KEY, "TIME" DOUBLE PRECISION NOT NULL, "MESSAGE" NVARCHAR2(200) NULL, "DRIVER_ID" NUMBER(11) NOT NULL);
--
-- Create model LogSession
--
CREATE TABLE "DBLABAPP_LOGSESSION" ("ID" NUMBER(11) NOT NULL PRIMARY KEY, "DATE" DATE NOT NULL, "COMMENT" NVARCHAR2(200) NULL);
--
-- Add field logSession to logentry
--
ALTER TABLE "DBLABAPP_LOGENTRY" ADD "LOGSESSION_ID" NUMBER(11) NOT NULL;
ALTER TABLE "DBLABAPP_LOGENTRY" MODIFY "LOGSESSION_ID" DEFAULT NULL;

DECLARE
    i INTEGER;
BEGIN
    SELECT COUNT(*) INTO i FROM USER_CATALOG
        WHERE TABLE_NAME = 'DBLABAPP_DRIVERENTRY_SQ' AND TABLE_TYPE = 'SEQUENCE';
    IF i = 0 THEN
        EXECUTE IMMEDIATE 'CREATE SEQUENCE "DBLABAPP_DRIVERENTRY_SQ"';
    END IF;
END;
/;

CREATE OR REPLACE TRIGGER "DBLABAPP_DRIVERENTRY_TR"
BEFORE INSERT ON "DBLABAPP_DRIVERENTRY"
FOR EACH ROW
WHEN (new."ID" IS NULL)
    BEGIN
        SELECT "DBLABAPP_DRIVERENTRY_SQ".nextval
        INTO :new."ID" FROM dual;
    END;
/;

DECLARE
    i INTEGER;
BEGIN
    SELECT COUNT(*) INTO i FROM USER_CATALOG
        WHERE TABLE_NAME = 'DBLABAPP_LOGENTRY_SQ' AND TABLE_TYPE = 'SEQUENCE';
    IF i = 0 THEN
        EXECUTE IMMEDIATE 'CREATE SEQUENCE "DBLABAPP_LOGENTRY_SQ"';
    END IF;
END;
/;

CREATE OR REPLACE TRIGGER "DBLABAPP_LOGENTRY_TR"
BEFORE INSERT ON "DBLABAPP_LOGENTRY"
FOR EACH ROW
WHEN (new."ID" IS NULL)
    BEGIN
        SELECT "DBLABAPP_LOGENTRY_SQ".nextval
        INTO :new."ID" FROM dual;
    END;
/;
ALTER TABLE "DBLABAPP_LOGENTRY" ADD CONSTRAINT "D28F44EF5E063FE83928BC19E77FB3" FOREIGN KEY ("DRIVER_ID") REFERENCES "DBLABAPP_DRIVERENTRY" ("ID") DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX "DBLABAPP_LOGENTRY_17565772" ON "DBLABAPP_LOGENTRY" ("DRIVER_ID");

DECLARE
    i INTEGER;
BEGIN
    SELECT COUNT(*) INTO i FROM USER_CATALOG
        WHERE TABLE_NAME = 'DBLABAPP_LOGSESSION_SQ' AND TABLE_TYPE = 'SEQUENCE';
    IF i = 0 THEN
        EXECUTE IMMEDIATE 'CREATE SEQUENCE "DBLABAPP_LOGSESSION_SQ"';
    END IF;
END;
/;

CREATE OR REPLACE TRIGGER "DBLABAPP_LOGSESSION_TR"
BEFORE INSERT ON "DBLABAPP_LOGSESSION"
FOR EACH ROW
WHEN (new."ID" IS NULL)
    BEGIN
        SELECT "DBLABAPP_LOGSESSION_SQ".nextval
        INTO :new."ID" FROM dual;
    END;
/;
CREATE INDEX "DBLABAPP_LOGENTRY_496872EE" ON "DBLABAPP_LOGENTRY" ("LOGSESSION_ID");
ALTER TABLE "DBLABAPP_LOGENTRY" ADD CONSTRAINT "A521D5A89A112FBB1C6FF64D17F71E" FOREIGN KEY ("LOGSESSION_ID") REFERENCES "DBLABAPP_LOGSESSION" ("ID") DEFERRABLE INITIALLY DEFERRED;
COMMIT;
